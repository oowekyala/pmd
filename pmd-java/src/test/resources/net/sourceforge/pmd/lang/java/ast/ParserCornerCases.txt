+- CompilationUnit[@PackageName = ""]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "Superclass", @CanonicalName = "Superclass", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "Superclass", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 3]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Superclass", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- FormalParameters[@Empty = true, @Size = 0]
   |     |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Superclass", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- TypeParameters[@Empty = false, @Size = 1]
   |     |  |  +- TypeParameter[@Name = "V", @TypeBound = false]
   |     |  +- FormalParameters[@Empty = false, @Size = 1]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Class"]
   |     |  |     |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |     |  |     |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "V"]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "clazz", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "doStuff", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PACKAGE, @Void = false]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- TypeParameters[@Empty = false, @Size = 1]
   |        |  +- TypeParameter[@Name = "T", @TypeBound = false]
   |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "T"]
   |        +- FormalParameters[@Empty = false, @Size = 1]
   |        |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "T"]
   |        |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "s", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- ReturnStatement[]
   |              +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "s", @ParenthesisDepth = 0, @Parenthesized = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "Outer", @CanonicalName = "Outer", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "Outer", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 2]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Outer", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  +- FormalParameters[@Empty = true, @Size = 0]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ExpressionStatement[]
   |     |        +- MethodCall[@CompileTimeConstant = false, @MethodName = "println", @ParenthesisDepth = 0, @Parenthesized = false]
   |     |           +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "out", @ParenthesisDepth = 0, @Parenthesized = false]
   |     |           |  +- TypeExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |     |           |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "System"]
   |     |           +- ArgumentList[@Empty = false, @Size = 1]
   |     |              +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "Outer constructor", @Empty = false, @Length = 17, @LiteralText = "\"Outer constructor\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |     +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "Outer$Inner", @CanonicalName = "Outer.Inner", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = true, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "Inner", @TopLevel = false, @Visibility = Visibility.V_PACKAGE]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |           +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Inner", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |              +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |              +- FormalParameters[@Empty = true, @Size = 0]
   |              +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |                 +- ExpressionStatement[]
   |                    +- MethodCall[@CompileTimeConstant = false, @MethodName = "println", @ParenthesisDepth = 0, @Parenthesized = false]
   |                       +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "out", @ParenthesisDepth = 0, @Parenthesized = false]
   |                       |  +- TypeExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |                       |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "System"]
   |                       +- ArgumentList[@Empty = false, @Size = 1]
   |                          +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "Inner constructor", @Empty = false, @Length = 17, @LiteralText = "\"Inner constructor\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "Child", @CanonicalName = "Child", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "Child", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ExtendsList[@Empty = false, @Size = 1]
   |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Inner"]
   |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Outer"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Child", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- FormalParameters[@Empty = false, @Size = 1]
   |        |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Outer"]
   |        |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "o", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |        +- Block[@Empty = false, @Size = 2, @containsComment = false]
   |           +- ExplicitConstructorInvocation[@ArgumentCount = 0, @MethodName = "new", @Qualified = true, @Super = true, @This = false]
   |           |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "o", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  +- ArgumentList[@Empty = true, @Size = 0]
   |           +- ExpressionStatement[]
   |              +- MethodCall[@CompileTimeConstant = false, @MethodName = "println", @ParenthesisDepth = 0, @Parenthesized = false]
   |                 +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "out", @ParenthesisDepth = 0, @Parenthesized = false]
   |                 |  +- TypeExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |                 |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "System"]
   |                 +- ArgumentList[@Empty = false, @Size = 1]
   |                    +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "Child constructor", @Empty = false, @Length = 17, @LiteralText = "\"Child constructor\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "ParserCornerCases", @CanonicalName = "ParserCornerCases", @EffectiveVisibility = Visibility.V_PUBLIC, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = false, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "ParserCornerCases", @TopLevel = true, @Visibility = Visibility.V_PUBLIC]
   |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |  +- ExtendsList[@Empty = false, @Size = 1]
   |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Superclass"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 8]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "ParserCornerCases", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- FormalParameters[@Empty = true, @Size = 0]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ExplicitConstructorInvocation[@ArgumentCount = 0, @MethodName = "new", @Qualified = false, @Super = true, @This = false]
   |     |        +- ArgumentList[@Empty = true, @Size = 0]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "ParserCornerCases", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- FormalParameters[@Empty = false, @Size = 1]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "a", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ExplicitConstructorInvocation[@ArgumentCount = 2, @MethodName = "new", @Qualified = false, @Super = false, @This = true]
   |     |        +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |     |        |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Integer"]
   |     |        +- ArgumentList[@Empty = false, @Size = 2]
   |     |           +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "a", @ParenthesisDepth = 0, @Parenthesized = false]
   |     |           +- NumericLiteral[@Base = 10, @CompileTimeConstant = true, @DoubleLiteral = false, @FloatLiteral = false, @IntLiteral = true, @Integral = true, @LiteralText = "2", @LongLiteral = false, @ParenthesisDepth = 0, @Parenthesized = false, @ValueAsDouble = 2.0, @ValueAsFloat = 2.0, @ValueAsInt = 2, @ValueAsLong = 2]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 2, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "ParserCornerCases", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- TypeParameters[@Empty = false, @Size = 1]
   |     |  |  +- TypeParameter[@Name = "W", @TypeBound = false]
   |     |  +- FormalParameters[@Empty = false, @Size = 2]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |  |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |  |  +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
   |     |  |  |  +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "a", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "b", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ExplicitConstructorInvocation[@ArgumentCount = 1, @MethodName = "new", @Qualified = false, @Super = true, @This = false]
   |     |        +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |     |        |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |        +- ArgumentList[@Empty = false, @Size = 1]
   |     |           +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |     |              +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "ParserCornerCases", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |     |  +- FormalParameters[@Empty = false, @Size = 1]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "title", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ExplicitConstructorInvocation[@ArgumentCount = 0, @MethodName = "new", @Qualified = false, @Super = false, @This = true]
   |     |        +- ArgumentList[@Empty = true, @Size = 0]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "testGeneric", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = true]
   |     |  +- ModifierList[@EffectiveModifiers = "{public, strictfp}", @ExplicitModifiers = "{public, strictfp}"]
   |     |  +- VoidType[]
   |     |  +- FormalParameters[@Empty = true, @Size = 0]
   |     |  +- Block[@Empty = false, @Size = 2, @containsComment = false]
   |     |     +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |     |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |     |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |     |  +- VariableDeclarator[@Initializer = true, @Name = "o"]
   |     |     |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "o", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |     |     +- MethodCall[@CompileTimeConstant = false, @MethodName = "doStuff", @ParenthesisDepth = 0, @Parenthesized = false]
   |     |     |        +- SuperExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |     |     |        +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |     |     |        |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |     |        +- ArgumentList[@Empty = false, @Size = 1]
   |     |     |           +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "foo", @Empty = false, @Length = 3, @LiteralText = "\"foo\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |     |     +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |        +- VariableDeclarator[@Initializer = true, @Name = "v"]
   |     |           +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "v", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |           +- MethodCall[@CompileTimeConstant = false, @MethodName = "thisGeneric", @ParenthesisDepth = 0, @Parenthesized = false]
   |     |              +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |     |              +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |     |              |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |     |              +- ArgumentList[@Empty = false, @Size = 1]
   |     |                 +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "bar", @Empty = false, @Length = 3, @LiteralText = "\"bar\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "thisGeneric", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PACKAGE, @Void = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  +- TypeParameters[@Empty = false, @Size = 1]
   |     |  |  +- TypeParameter[@Name = "X", @TypeBound = false]
   |     |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "X"]
   |     |  +- FormalParameters[@Empty = false, @Size = 1]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "X"]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "x", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ReturnStatement[]
   |     |        +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "x", @ParenthesisDepth = 0, @Parenthesized = false]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "getByteArrayClass", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PACKAGE, @Void = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Class"]
   |     |  +- FormalParameters[@Empty = true, @Size = 0]
   |     |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |     |     +- ReturnStatement[]
   |     |        +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 1, @Parenthesized = true]
   |     |           +- ArrayType[@ArrayDepth = 1]
   |     |              +- PrimitiveType[@Kind = PrimitiveTypeKind.BYTE]
   |     |              +- ArrayDimensions[@Empty = false, @Size = 1]
   |     |                 +- ArrayTypeDim[@Varargs = false]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PUBLIC, @Name = "bitwiseOperator", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = true]
   |        +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |        +- VoidType[]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- IfStatement[@Else = false]
   |              +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.NE, @ParenthesisDepth = 0, @Parenthesized = false]
   |              |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.AND, @ParenthesisDepth = 1, @Parenthesized = true]
   |              |  |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "modifiers", @ParenthesisDepth = 0, @Parenthesized = false]
   |              |  |  +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "SHIFT_DOWN_MASK", @ParenthesisDepth = 0, @Parenthesized = false]
   |              |  |     +- AmbiguousName[@CompileTimeConstant = false, @Name = "InputEvent", @ParenthesisDepth = 0, @Parenthesized = false]
   |              |  +- NumericLiteral[@Base = 10, @CompileTimeConstant = true, @DoubleLiteral = false, @FloatLiteral = false, @IntLiteral = true, @Integral = true, @LiteralText = "0", @LongLiteral = false, @ParenthesisDepth = 0, @Parenthesized = false, @ValueAsDouble = 0.0, @ValueAsFloat = 0.0, @ValueAsInt = 0, @ValueAsLong = 0]
   |              +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |                 +- ExpressionStatement[]
   |                    +- MethodCall[@CompileTimeConstant = false, @MethodName = "append", @ParenthesisDepth = 0, @Parenthesized = false]
   |                       +- AmbiguousName[@CompileTimeConstant = false, @Name = "buf", @ParenthesisDepth = 0, @Parenthesized = false]
   |                       +- ArgumentList[@Empty = false, @Size = 1]
   |                          +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "shift ", @Empty = false, @Length = 6, @LiteralText = "\"shift \"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "PmdTestParent", @CanonicalName = "PmdTestParent", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "PmdTestParent", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "PmdTestParent", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |        +- FormalParameters[@Empty = false, @Size = 1]
   |        |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |        |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "obj", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |        +- Block[@Empty = true, @Size = 0, @containsComment = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "PmdTestChild", @CanonicalName = "PmdTestChild", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "PmdTestChild", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ExtendsList[@Empty = false, @Size = 1]
   |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "PmdTestParent"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "PmdTestChild", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- ExplicitConstructorInvocation[@ArgumentCount = 1, @MethodName = "new", @Qualified = false, @Super = true, @This = false]
   |              +- ArgumentList[@Empty = false, @Size = 1]
   |                 +- ConstructorCall[@AnonymousClass = true, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                    +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                    +- ArgumentList[@Empty = true, @Size = 0]
   |                    +- AnonymousClassDeclaration[@Abstract = false, @Annotation = false, @Anonymous = true, @BinaryName = "PmdTestChild$1", @CanonicalName = null, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @Record = false, @RegularClass = false, @RegularInterface = false, @SimpleName = "", @TopLevel = false, @Visibility = Visibility.V_ANONYMOUS]
   |                       +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                       +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |                          +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Name = "create", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
   |                             +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |                             +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                             +- FormalParameters[@Empty = true, @Size = 0]
   |                             +- Block[@Empty = false, @Size = 3, @containsComment = false]
   |                                +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |                                |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                                |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                                |  +- VariableDeclarator[@Initializer = true, @Name = "memoryMonitor"]
   |                                |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "memoryMonitor", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |                                |     +- NullLiteral[@CompileTimeConstant = false, @LiteralText = "null", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                +- IfStatement[@Else = false]
   |                                |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
   |                                |  |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "memoryMonitor", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                |  |  +- NullLiteral[@CompileTimeConstant = false, @LiteralText = "null", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |                                |     +- ExpressionStatement[]
   |                                |        +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
   |                                |           +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "memoryMonitor", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                |           +- ConstructorCall[@AnonymousClass = false, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                                |              +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                                |              +- ArgumentList[@Empty = true, @Size = 0]
   |                                +- ReturnStatement[]
   |                                   +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "memoryMonitor", @ParenthesisDepth = 0, @Parenthesized = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "SimpleBean", @CanonicalName = "SimpleBean", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "SimpleBean", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- FieldDeclaration[@EffectiveVisibility = Visibility.V_PACKAGE, @Visibility = Visibility.V_PACKAGE]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |        +- VariableDeclarator[@Initializer = false, @Name = "name"]
   |           +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_PACKAGE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = true, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = false, @Name = "name", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_PACKAGE]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "SimpleBeanUser", @CanonicalName = "SimpleBeanUser", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "SimpleBeanUser", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 2]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "SimpleBeanUser", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |     |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  +- FormalParameters[@Empty = false, @Size = 1]
   |     |  |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |     |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |     |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SimpleBean"]
   |     |  |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "o", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |     |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "SimpleBeanUser", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- ExplicitConstructorInvocation[@ArgumentCount = 1, @MethodName = "new", @Qualified = false, @Super = false, @This = true]
   |              +- ArgumentList[@Empty = false, @Size = 1]
   |                 +- ConstructorCall[@AnonymousClass = true, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                    +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SimpleBean"]
   |                    +- ArgumentList[@Empty = true, @Size = 0]
   |                    +- AnonymousClassDeclaration[@Abstract = false, @Annotation = false, @Anonymous = true, @BinaryName = "SimpleBeanUser$1", @CanonicalName = null, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @Record = false, @RegularClass = false, @RegularInterface = false, @SimpleName = "", @TopLevel = false, @Visibility = Visibility.V_ANONYMOUS]
   |                       +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                       +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |                          +- Initializer[@Static = false]
   |                             +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |                                +- ExpressionStatement[]
   |                                   +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
   |                                      +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "name", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                      +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "test", @Empty = false, @Length = 4, @LiteralText = "\"test\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "SimpleBeanUser2", @CanonicalName = "SimpleBeanUser2", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "SimpleBeanUser2", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ExtendsList[@Empty = false, @Size = 1]
   |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SimpleBeanUser"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "SimpleBeanUser2", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- ExplicitConstructorInvocation[@ArgumentCount = 1, @MethodName = "new", @Qualified = false, @Super = true, @This = false]
   |              +- ArgumentList[@Empty = false, @Size = 1]
   |                 +- ConstructorCall[@AnonymousClass = true, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                    +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SimpleBean"]
   |                    +- ArgumentList[@Empty = true, @Size = 0]
   |                    +- AnonymousClassDeclaration[@Abstract = false, @Annotation = false, @Anonymous = true, @BinaryName = "SimpleBeanUser2$1", @CanonicalName = null, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @Record = false, @RegularClass = false, @RegularInterface = false, @SimpleName = "", @TopLevel = false, @Visibility = Visibility.V_ANONYMOUS]
   |                       +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                       +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |                          +- Initializer[@Static = false]
   |                             +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |                                +- ExpressionStatement[]
   |                                   +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
   |                                      +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "name", @ParenthesisDepth = 0, @Parenthesized = false]
   |                                      +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "test2", @Empty = false, @Length = 5, @LiteralText = "\"test2\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "TestParseAnnototation", @CanonicalName = "TestParseAnnototation", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "TestParseAnnototation", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "parse", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PACKAGE, @Void = true]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- VoidType[]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 4, @containsComment = false]
   |           +- ForStatement[]
   |           |  +- ForInit[]
   |           |  |  +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |           |  |     |  +- Annotation[@SimpleName = "SuppressWarnings"]
   |           |  |     |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SuppressWarnings"]
   |           |  |     |     +- AnnotationMemberList[@Empty = false, @Size = 1]
   |           |  |     |        +- MemberValuePair[@Name = "value", @Shorthand = true]
   |           |  |     |           +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "unchecked", @Empty = false, @Length = 9, @LiteralText = "\"unchecked\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |           |  |     +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
   |           |  |     +- VariableDeclarator[@Initializer = true, @Name = "i"]
   |           |  |        +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = true, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "i", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |  |        +- NumericLiteral[@Base = 10, @CompileTimeConstant = true, @DoubleLiteral = false, @FloatLiteral = false, @IntLiteral = true, @Integral = true, @LiteralText = "0", @LongLiteral = false, @ParenthesisDepth = 0, @Parenthesized = false, @ValueAsDouble = 0.0, @ValueAsFloat = 0.0, @ValueAsInt = 0, @ValueAsLong = 0]
   |           |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.LT, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "i", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- NumericLiteral[@Base = 10, @CompileTimeConstant = true, @DoubleLiteral = false, @FloatLiteral = false, @IntLiteral = true, @Integral = true, @LiteralText = "10", @LongLiteral = false, @ParenthesisDepth = 0, @Parenthesized = false, @ValueAsDouble = 10.0, @ValueAsFloat = 10.0, @ValueAsInt = 10, @ValueAsLong = 10]
   |           |  +- ForUpdate[]
   |           |  |  +- StatementExpressionList[@Empty = false, @Size = 1]
   |           |  |     +- UnaryExpression[@CompileTimeConstant = false, @Operator = UnaryOp.POST_INCREMENT, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |        +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "i", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
   |           +- ForStatement[]
   |           |  +- ForInit[]
   |           |  |  +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |  |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |           |  |     |  +- Annotation[@SimpleName = "SuppressWarnings"]
   |           |  |     |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SuppressWarnings"]
   |           |  |     |     +- AnnotationMemberList[@Empty = false, @Size = 1]
   |           |  |     |        +- MemberValuePair[@Name = "value", @Shorthand = true]
   |           |  |     |           +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "unchecked", @Empty = false, @Length = 9, @LiteralText = "\"unchecked\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |           |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Iterator"]
   |           |  |     +- VariableDeclarator[@Initializer = true, @Name = "it"]
   |           |  |        +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = true, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "it", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |  |        +- MethodCall[@CompileTimeConstant = false, @MethodName = "iterator", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |           +- MethodCall[@CompileTimeConstant = false, @MethodName = "values", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |           |  +- AmbiguousName[@CompileTimeConstant = false, @Name = "Fachabteilung", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |           |  +- ArgumentList[@Empty = true, @Size = 0]
   |           |  |           +- ArgumentList[@Empty = true, @Size = 0]
   |           |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "hasNext", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "it", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- ArgumentList[@Empty = true, @Size = 0]
   |           |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
   |           +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |           |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "List"]
   |           |  |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |           |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |           |  +- VariableDeclarator[@Initializer = true, @Name = "l"]
   |           |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "l", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |           |     +- ConstructorCall[@AnonymousClass = false, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |           |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "ArrayList"]
   |           |        |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |           |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |           |        +- ArgumentList[@Empty = true, @Size = 0]
   |           +- ForeachStatement[]
   |              +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |              |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |              |  |  +- Annotation[@SimpleName = "SuppressWarnings"]
   |              |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "SuppressWarnings"]
   |              |  |     +- AnnotationMemberList[@Empty = false, @Size = 1]
   |              |  |        +- MemberValuePair[@Name = "value", @Shorthand = true]
   |              |  |           +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "unchecked", @Empty = false, @Length = 9, @LiteralText = "\"unchecked\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |              |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |              |  +- VariableDeclarator[@Initializer = false, @Name = "s"]
   |              |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = true, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = false, @Name = "s", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |              +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "l", @ParenthesisDepth = 0, @Parenthesized = false]
   |              +- Block[@Empty = true, @Size = 0, @containsComment = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "FooBlock", @CanonicalName = "FooBlock", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "FooBlock", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = true, @Size = 0]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "MyFoo", @CanonicalName = "MyFoo", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "MyFoo", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "MyFoo", @Varargs = false, @Visibility = Visibility.V_PACKAGE, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        +- FormalParameters[@Empty = false, @Size = 1]
   |        |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "FooBlock"]
   |        |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "b", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |        +- Block[@Empty = true, @Size = 0, @containsComment = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "Foo", @CanonicalName = "Foo", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "Foo", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ExtendsList[@Empty = false, @Size = 1]
   |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "MyFoo"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- ConstructorDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "Foo", @Varargs = false, @Visibility = Visibility.V_PUBLIC, @containsComment = false]
   |        +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           +- ExplicitConstructorInvocation[@ArgumentCount = 1, @MethodName = "new", @Qualified = false, @Super = true, @This = false]
   |              +- ArgumentList[@Empty = false, @Size = 1]
   |                 +- ConstructorCall[@AnonymousClass = true, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                    +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "FooBlock"]
   |                    +- ArgumentList[@Empty = true, @Size = 0]
   |                    +- AnonymousClassDeclaration[@Abstract = false, @Annotation = false, @Anonymous = true, @BinaryName = "Foo$1", @CanonicalName = null, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @Record = false, @RegularClass = false, @RegularInterface = false, @SimpleName = "", @TopLevel = false, @Visibility = Visibility.V_ANONYMOUS]
   |                       +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                       +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |                          +- MethodDeclaration[@Abstract = false, @Arity = 1, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Name = "valueOf", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
   |                             +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |                             +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                             +- FormalParameters[@Empty = false, @Size = 1]
   |                             |  +- FormalParameter[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @Varargs = false, @Visibility = Visibility.V_LOCAL]
   |                             |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                             |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Object"]
   |                             |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = false, @LocalVariable = false, @Name = "object", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |                             +- Block[@Empty = false, @Size = 2, @containsComment = false]
   |                                +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |                                |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |                                |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
   |                                |  +- VariableDeclarator[@Initializer = true, @Name = "fish"]
   |                                |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "fish", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
   |                                |     +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "salmon", @Empty = false, @Length = 6, @LiteralText = "\"salmon\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
   |                                +- ReturnStatement[]
   |                                   +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "fish", @ParenthesisDepth = 0, @Parenthesized = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "SuperTest", @CanonicalName = "SuperTest", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "SuperTest", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |  +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
   |     +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "iterator", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
   |        +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Iterator"]
   |        |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "E"]
   |        +- FormalParameters[@Empty = true, @Size = 0]
   |        +- Block[@Empty = false, @Size = 2, @containsComment = false]
   |           +- IfStatement[@Else = false]
   |           |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "contains", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "mods", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  |  +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |  +- ArgumentList[@Empty = false, @Size = 1]
   |           |  |     +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "Iterator", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  |        +- AmbiguousName[@CompileTimeConstant = false, @Name = "Modification", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           |     +- ReturnStatement[]
   |           |        +- ConstructorCall[@AnonymousClass = true, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |           |           +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Iterator"]
   |           |           |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |           |           |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "E"]
   |           |           +- ArgumentList[@Empty = true, @Size = 0]
   |           |           +- AnonymousClassDeclaration[@Abstract = false, @Annotation = false, @Anonymous = true, @BinaryName = "SuperTest$1", @CanonicalName = null, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @Record = false, @RegularClass = false, @RegularInterface = false, @SimpleName = "", @TopLevel = false, @Visibility = Visibility.V_ANONYMOUS]
   |           |              +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |           |              +- ClassOrInterfaceBody[@Empty = false, @Size = 4]
   |           |                 +- FieldDeclaration[@EffectiveVisibility = Visibility.V_ANONYMOUS, @Visibility = Visibility.V_PACKAGE]
   |           |                 |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   |           |                 |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Iterator"]
   |           |                 |  |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
   |           |                 |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "E"]
   |           |                 |  +- VariableDeclarator[@Initializer = true, @Name = "wrapped"]
   |           |                 |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_ANONYMOUS, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = true, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = false, @Name = "wrapped", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_PACKAGE]
   |           |                 |     +- MethodCall[@CompileTimeConstant = false, @MethodName = "iterator", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |        +- SuperExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |        |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "ImmutableSet"]
   |           |                 |        +- ArgumentList[@Empty = true, @Size = 0]
   |           |                 +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Name = "hasNext", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
   |           |                 |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |           |                 |  +- PrimitiveType[@Kind = PrimitiveTypeKind.BOOLEAN]
   |           |                 |  +- FormalParameters[@Empty = true, @Size = 0]
   |           |                 |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           |                 |     +- ReturnStatement[]
   |           |                 |        +- MethodCall[@CompileTimeConstant = false, @MethodName = "hasNext", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "wrapped", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           |  +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           +- ArgumentList[@Empty = true, @Size = 0]
   |           |                 +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Name = "next", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
   |           |                 |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |           |                 |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "E"]
   |           |                 |  +- FormalParameters[@Empty = true, @Size = 0]
   |           |                 |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           |                 |     +- ReturnStatement[]
   |           |                 |        +- MethodCall[@CompileTimeConstant = false, @MethodName = "next", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "wrapped", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           |  +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                 |           +- ArgumentList[@Empty = true, @Size = 0]
   |           |                 +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_ANONYMOUS, @Name = "remove", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = true]
   |           |                    +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
   |           |                    +- VoidType[]
   |           |                    +- FormalParameters[@Empty = true, @Size = 0]
   |           |                    +- Block[@Empty = false, @Size = 2, @containsComment = false]
   |           |                       +- IfStatement[@Else = false]
   |           |                       |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "contains", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |  |  +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "mods", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |  |  |  +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |  |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "ImmutableSet"]
   |           |                       |  |  +- ArgumentList[@Empty = false, @Size = 1]
   |           |                       |  |     +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "RemoveIter", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |  |        +- AmbiguousName[@CompileTimeConstant = false, @Name = "Modification", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
   |           |                       |     +- ExpressionStatement[]
   |           |                       |        +- MethodCall[@CompileTimeConstant = false, @MethodName = "remove", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |           +- FieldAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "wrapped", @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |           |  +- ThisExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
   |           |                       |           +- ArgumentList[@Empty = true, @Size = 0]
   |           |                       +- ThrowStatement[]
   |           |                          +- ConstructorCall[@AnonymousClass = false, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |           |                             +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "UnsupportedOperationException"]
   |           |                             +- ArgumentList[@Empty = true, @Size = 0]
   |           +- ThrowStatement[]
   |              +- ConstructorCall[@AnonymousClass = false, @CompileTimeConstant = false, @DiamondTypeArgs = false, @MethodName = "new", @ParenthesisDepth = 0, @Parenthesized = false, @QualifiedInstanceCreation = false]
   |                 +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "UnsupportedOperationException"]
   |                 +- ArgumentList[@Empty = true, @Size = 0]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "ClazzPropertyOfPrimitiveTypes", @CanonicalName = "ClazzPropertyOfPrimitiveTypes", @EffectiveVisibility = Visibility.V_PACKAGE, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "", @PackagePrivate = true, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "ClazzPropertyOfPrimitiveTypes", @TopLevel = true, @Visibility = Visibility.V_PACKAGE]
      +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
      +- ClassOrInterfaceBody[@Empty = false, @Size = 1]
         +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PACKAGE, @Name = "test", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = true]
            +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
            +- VoidType[]
            +- FormalParameters[@Empty = true, @Size = 0]
            +- Block[@Empty = false, @Size = 11, @containsComment = false]
               +- LocalVariableDeclaration[@EffectiveVisibility = Visibility.V_LOCAL, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
               |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
               |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Class"]
               |  |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
               |  |     +- WildcardType[@LowerBound = false, @UpperBound = true]
               |  +- VariableDeclarator[@Initializer = true, @Name = "c"]
               |     +- VariableDeclaratorId[@EffectiveVisibility = Visibility.V_LOCAL, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = true, @Name = "c", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_LOCAL]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.SHORT]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.LONG]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.FLOAT]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.DOUBLE]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.CHAR]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- PrimitiveType[@Kind = PrimitiveTypeKind.BYTE]
               +- ExpressionStatement[]
               |  +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |        +- VoidType[]
               +- IfStatement[@Else = false]
               |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |  |  +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |  |  +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |  |     +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
               |  |  |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |  |        +- PrimitiveType[@Kind = PrimitiveTypeKind.SHORT]
               |  |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |  |        +- PrimitiveType[@Kind = PrimitiveTypeKind.LONG]
               |  |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |  |        +- PrimitiveType[@Kind = PrimitiveTypeKind.DOUBLE]
               |  |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |  |        +- PrimitiveType[@Kind = PrimitiveTypeKind.CHAR]
               |  |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  |        +- PrimitiveType[@Kind = PrimitiveTypeKind.BYTE]
               |  |  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.EQ, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "c", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
               |  |        +- VoidType[]
               |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
               +- IfStatement[@Else = false]
               |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "equals", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |  +- StringLiteral[@CompileTimeConstant = true, @ConstValue = "a", @Empty = false, @Length = 1, @LiteralText = "\"a\"", @ParenthesisDepth = 0, @Parenthesized = false, @TextBlock = false]
               |  |  +- ArgumentList[@Empty = false, @Size = 1]
               |  |     +- MethodCall[@CompileTimeConstant = false, @MethodName = "getName", @ParenthesisDepth = 0, @Parenthesized = false]
               |  |        +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 1, @Parenthesized = true]
               |  |        |  +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
               |  |        +- ArgumentList[@Empty = true, @Size = 0]
               |  +- Block[@Empty = true, @Size = 0, @containsComment = false]
               +- IfStatement[@Else = false]
                  +- InfixExpression[@CompileTimeConstant = false, @Operator = BinaryOp.CONDITIONAL_OR, @ParenthesisDepth = 0, @Parenthesized = false]
                  |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "equals", @ParenthesisDepth = 1, @Parenthesized = true]
                  |  |  +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
                  |  |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Integer"]
                  |  |  +- ArgumentList[@Empty = false, @Size = 1]
                  |  |     +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "clazz", @ParenthesisDepth = 0, @Parenthesized = false]
                  |  +- MethodCall[@CompileTimeConstant = false, @MethodName = "equals", @ParenthesisDepth = 1, @Parenthesized = true]
                  |     +- ClassLiteral[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
                  |     |  +- PrimitiveType[@Kind = PrimitiveTypeKind.INT]
                  |     +- ArgumentList[@Empty = false, @Size = 1]
                  |        +- VariableAccess[@AccessType = AccessType.READ, @CompileTimeConstant = false, @Name = "clazz", @ParenthesisDepth = 0, @Parenthesized = false]
                  +- Block[@Empty = true, @Size = 0, @containsComment = false]
